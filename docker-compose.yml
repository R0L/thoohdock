version: "3"
services:
  workspace:
    build:
      context: ./workspace
    volumes:
      - ${SOURCE_DIR}:/var/www/html:rw
      - ${WORKSPACE_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${WORKSPACE_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${WORKSPACE_LOG_PATH}:/var/log/php
    ports:
      - "9501:9501"
    restart: always
    cap_add:
      - SYS_PTRACE
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
    networks:
      - frontend
      - backend

  phpunit:
    build:
      context: ./phpunit
    volumes:
      - ${SOURCE_DIR}:/var/www/html:rw
      - ${PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
    #    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - backend

  php73:
    build:
      context: ./php73
    volumes:
      - ${SOURCE_DIR}:/var/www/html:rw
      - ${PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP_LOG_PATH}:/var/log/php
    cap_add:
      - SYS_PTRACE
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
    networks:
      - frontend
      - backend

  php56:
    build:
      context: ./php56
    volumes:
      - ${SOURCE_DIR}:/var/www/html:rw
      - ${PHP56_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP56_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP56_LOG_PATH}:/var/log/php
    cap_add:
      - SYS_PTRACE
    environment:
      - PHP_IDE_CONFIG=${PHP56_IDE_CONFIG}
    networks:
      - frontend
      - backend


  nginx:
    build:
      context: ./nginx
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/var/www/html:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    networks:
      - frontend
      - backend

  mysql:
    build:
      context: ./mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${DATA_PATH}/mysql:/var/lib/mysql
      - ${MYSQL_LOG_PATH}:/var/log/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

  phpmyadmin:
    build: ./phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - MYSQL_USER=${PMA_USER}
      - MYSQL_PASSWORD=${PMA_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}
    ports:
      - "${PMA_PORT}:80"
    depends_on:
      - mysql
    networks:
      - frontend
      - backend

  redis:
    build: ./redis
    volumes:
      - ${DATA_PATH}/redis:/data
      - ${REDIS_LOG_PATH}:/var/log/redis
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

  redis-webui:
    build:
      context: ./redis-webui
    environment:
      - ADMIN_USER=${REDIS_WEBUI_USERNAME}
      - ADMIN_PASS=${REDIS_WEBUI_PASSWORD}
      - REDIS_1_HOST=${REDIS_WEBUI_CONNECT_HOST}
      - REDIS_1_PORT=${REDIS_WEBUI_CONNECT_PORT}
    networks:
      - backend
    ports:
      - "${REDIS_WEBUI_PORT}:80"
    depends_on:
      - redis

  redis-cluster:
    build: ./redis-cluster
    ports:
      - "${REDIS_CLUSTER_PORT_RANGE}:7000-7005"
    networks:
      - backend

  ssdb:
    build: ./ssdb
    volumes:
      - ${DATA_PATH}/ssdb:/var/lib/ssdb
      - ${SSDB_LOG_PATH}:/var/log/ssdb
    ports:
      - "${SSDB_PORT}:8888"
    networks:
      - backend

  es-master:
    build:  ./elasticsearch/master
    container_name: es-master
    volumes:
      - ${DATA_PATH}/es-master:/usr/share/elasticsearch/data:rw
      - ${ES_MASTER_CONF}:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ${ES_MASTER_LOG_DIR}:/user/share/elasticsearch/logs:rw
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "${ES_HOST_HTTP_PORT}:9200"
      - "${ES_HOST_TRANSPORT_PORT}:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - frontend
      - backend

  es-node:
    build:  ./elasticsearch/node
    container_name: es-node
    volumes:
      - ${DATA_PATH}/es-node:/usr/share/elasticsearch/data:rw
      - ${ES_NODE_CONF}:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ${ES_NODE_LOG_DIR}:/user/share/elasticsearch/logs:rw
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - frontend
      - backend

  es-head:
    build: ./elasticsearch/head
    container_name: es-head
    ports:
      - "${ES_HEAD_HOST_PORT}:9100"
    depends_on:
      - es-master
      - es-node
    networks:
      - frontend
      - backend

  rabbitmq:
    build: ./rabbitmq
    ports:
      - "${RABBITMQ_NODE_HOST_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672"
      - "${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671"
    privileged: true
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    hostname: laradock-rabbitmq
    volumes:
      - ${DATA_PATH}/rabbitmq:/var/lib/rabbitmq
    networks:
      - backend

  mongo:
    build: ./mongo
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - ${DATA_PATH}/mongo:/mong
    networks:
      - backend

  mongo-webui:
    build:
      context: ./mongo-webui
    environment:
      - ROOT_URL=${MONGO_WEBUI_ROOT_URL}
      - MONGO_URL=${MONGO_WEBUI_MONGO_URL}
      - INSTALL_MONGO=${MONGO_WEBUI_INSTALL_MONGO}
    volumes:
      - ${DATA_PATH}/mongo-webui:/data/db
    ports:
      - "${MONGO_WEBUI_PORT}:3000"
    depends_on:
      - mongo
    networks:
      - backend
      - frontend

  beanstalkd:
    build: ./beanstalkd
    ports:
      - "${BEANSTALKD_HOST_PORT}:11300"
    privileged: true
    networks:
      - backend

  beanstalkd-console:
    build: ./beanstalkd-console
    ports:
      - "${BEANSTALKD_CONSOLE_HOST_PORT}:2080"
    depends_on:
      - beanstalkd
    networks:
      - backend

  zk:
    build: ./zookeeper
    container_name: zk
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zk:2888:3888
    networks:
      - backend

  kafka:
    build: ./kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zk
    networks:
      - backend

  kafka-manager:
    build: ./kafka-manager
    ports:
      - "9111:9000"
    environment:
      ZK_HOSTS: zk:2181
      KAFKA_BROKERS: kafka:9092
    networks:
      - frontend
      - backend

  golang:
    build: ./golang
    ports:
    - "${GOLANG_HTTP_HOST_PORT}:80"
    networks:
    - frontend

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
